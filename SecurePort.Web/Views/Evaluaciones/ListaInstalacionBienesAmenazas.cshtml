@using SecurePort.Entities.Models
@model UsuarioFrontal
 <div class="panel-heading">
	<a data-original-title="Ayuda" data-placement="bottom" data-style="top" class="clip-user-2 tooltips" onclick=" Ayuda() "></a>
		<div id="MostrarMensaje">
			<strong>			
				Lista de Bienes/Amenazas		
			</strong>
		</div>
	</div>

<div class="panel-body buttons-widget">
   @*@(this.Html.Kendo().ToolBar().Name("ToolBar").HtmlAttributes(new {  style = "width: 65%;border: 0;background: rgba(0, 0, 255, 0);"  }).Items(items =>
			{
				items.Add().Type(CommandType.Button).Togglable(true).HtmlAttributes(new { type = "button", @class = "btn btn-orange icon-folder-open-alt", style = "margin-bottom:1px" })
					.Hidden(this.Model.permisosViewModel.EVAL_LISTA_IIPP).Id("toggle1");
			}).Events(e => e.Toggle("onToggleInstalacionBien")).Resizable(false))*@

</div>

<input type="text" id="URL"      name="URL"      style="display: none">
<div class="col-md-12">
	<div>
		<span></span>
		<hr style="margin-top: 0%;">
	</div>
</div>
<td class="panel-body">
	<div id="container">
		<div class="btn-group" style="margin-top: 0%; margin-left: 1%;">
		</div>
	</div>
</td>
<input type="text" id="IdNombreBien" name="IdNombreBiena" style="display: none">
<input type="text" id="IdValorBien"  name="IdValorBien"  style="display: none">
<input type="text" id="IdNombreIns" name="IdNombreIns" style="display: none">
<input type="text" id="IdValorIns"  name="IdValorIns"  style="display: none">
<input type="text" id="IdBienAnt"  name="IdBienAnt"  style="display: none">

<div class="panel-body">
	<div class="row">
	  @*  @(Html.Kendo().TextBoxFor(model =>  model.Id).Name("ID") 
			.HtmlAttributes(new { id="Id01", name="Id01" ,style = "width:220px;margin-left: 4%;display:none"}))*@
	   @* <div class="col-md-3">
			<div id="email01" class="form-group">
				<label class="control-label">
					Organismo
				</label>
				@(Html.Kendo().TextBox().Name("Organismos").Enable(false) 
				  .HtmlAttributes(new { id="Organimos01", nombre="Organismos01",placeholder = "Insertar Organismo",  type = "text", style = "background-color:#eeeeee", @class="form-control", value =@ViewBag.Organismo }))
			</div>
		</div>
		<div class="col-md-3">
			<div id="email01" class="form-group">
				<label class="control-label">
					Puerto
				</label>
				@(Html.Kendo().TextBox().Name("Puerto").Enable(false) 
				  .HtmlAttributes(new { id="Puerto01", nombre="Puerto01",placeholder = "Insertar Puerto",  type = "text",style = "background-color:#eeeeee", @class="form-control", value =@ViewBag.Puerto }))
			</div>
		</div>
		<div class="col-md-3">
			<div id="email01" class="form-group">
				<label class="control-label">
					Instalación
				</label>
				@(Html.Kendo().TextBox().Name("Puerto").Enable(false) 
				  .HtmlAttributes(new { id="Nombre01", nombre="Nombre01",placeholder = "Insertar Instalación",  type = "text",style = "background-color:#eeeeee", @class="form-control", value =@ViewBag.Instalacion}))
			</div>
		</div>*@

   </div>
	
  
	<div class="row">
		<div class="col-lg-12">
			<div class="table-responsive">
				@(this.Html.Kendo().Grid<InstalacionViewModel>()
					  .Name("GridInstalaciones")
					  .DataSource(dataSource => dataSource.Ajax()
					  .ServerOperation(true))
					  .ToolBar(tools => tools.Excel().Text("Exportar")
					  .HtmlAttributes(new { @class="btn btn-black btn-xs",target="_self",hidefocus="true",style = "margin-left: 90%;outline: none;color: #44C51A;" }))
					  .Excel(excel => excel.AllPages(true)
					  .FileName("ListadoInstalaciones.xlsx")
					  .Filterable(true)
					  .ProxyURL(this.Url.Action("Excel_Export_Save","Usuarios")))
					  .Columns(columns =>
					  {
						  columns.Bound(o => o.Id).Hidden(true);
						  columns.Bound(o => o.Nombre).Title("Instalación").HtmlAttributes(new { style = "text-align: left;" });                        
					  })
					  .HtmlAttributes(new { style = "height: 600px" })
					  .Events(events => events.Change("onChangeInstalacion").DetailExpand("DetailExpandIns"))
					  .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
					  .DataSource(dataSource => dataSource.Ajax()
					  .PageSize(20)
					  .Model(model => model.Id(p => p.Id))
					  .Read(read => read.Action("BuscadorInstalaciones","Evaluaciones")))
					  .Pageable()
					  .Sortable(sortable => sortable.AllowUnsort(true)
					  .SortMode(GridSortMode.MultipleColumn))
					  .Filterable()                      
					  .Scrollable()
					   .ClientDetailTemplateId("template")
					  .Groupable()
					  .Resizable(resize => resize.Columns(true))
					  .Reorderable(reorder => reorder.Columns(true)))


					  <script id="template" type="text/kendo-tmpl" >
							@(this.Html.Kendo().Grid<MOV_Detalle_InstalacionViewModel>().Name("grid_#=Id#").Columns(columns =>
							{
									columns.Bound(e => e.Id_Bien).Hidden(true);
									columns.Bound(e => e.Bien).Title("Bien").HtmlAttributes(new { style = "text-align: left;" });   
									columns.Bound(e => e.NumeroAmenazas).Hidden(true);

							})
							.DataSource(dataSource => dataSource.Ajax()
							.ServerOperation(true)
							.Read(read => read.Action("BuscadorBienesByInstalacion","Evaluaciones",new { IdInstalacion = "#=Id#" })))
							.Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
							.Sortable()                            
							.Scrollable(scrollable => scrollable.Height("auto"))
							.Events(events => events.Change("onChangeBien"))
							.ToClientTemplate())
						</script>

					  @*  <script type="text/kendo" id="AmenazasDetailsTemplate">
							 @(this.Html.Kendo().Grid<Detalle_EvaluacionViewModel>().Name("grid_#=Id_Bien#")
							.Columns(columns =>
								{
								   columns.Bound(e => e.Id).Hidden(true);
								   columns.Bound(e => e.Amenaza).Title("Amenaza").HtmlAttributes(new { style = "text-align: center;" });
								   columns.Bound(e => e.Nivel1).Title("Nivel de protección").HtmlAttributes(new { style = "text-align: center;" });
								   columns.Bound(e => e.IND_IAS_ITP).Title("Existe IAS oITP").HtmlAttributes(new { style = "text-align: center;" });
								   columns.Group(group => group
										.Title("Vulnerabilidad")
										.Columns(Vul => { 
													 Vul.Bound(q => q.NP1_IAI).Title("Accesibilidad de instlacion").HtmlAttributes(new { style = "text-align: center;" });
													 Vul.Bound(q => q.NP1_ISD).Title("Susceptibilidad de destrucción").HtmlAttributes(new { style = "text-align: center;" });
													 Vul.Bound(q => q.NP1_IIO).Title("Interferencia Operativa").HtmlAttributes(new { style = "text-align: center;" });
										 })
								   );
								   columns.Group(group => group
										.Title("Consecuencias")                               
										.Columns(Conc => {  
												   Conc.Bound(w => w.NP1_IDV).Title("Daños a la vida humana(1 a 5)").HtmlAttributes(new { style = "text-align: center;" });
												   Conc.Group(g =>                                              
													  g.Title("Daños Economicos")
													  .Columns(Dan => {  
																	Dan.Bound(w => w.NP1_IDE_D).Title("crd").HtmlAttributes(new { style = "text-align: center;" });
																	Dan.Bound(w => w.NP1_IDE_I).Title("cri").HtmlAttributes(new { style = "text-align: center;" });
																})
														);
												   Conc.Bound(w => w.NP1_IRD).Title("Redundancia de elementos que aseguren funcionalidad").HtmlAttributes(new { style = "text-align: center;" });
												   Conc.Bound(w => w.NP1_IRR).Title("Plaza de recup.").HtmlAttributes(new { style = "text-align: center;" });
												   Conc.Bound(w => w.NP1_ISA_MA).Title("Repercusión en medio ambiente").HtmlAttributes(new { style = "text-align: center;" });
												   Conc.Bound(w => w.NP1_ISA_PA).Title("Repercusión en el patrímonio artístico").HtmlAttributes(new { style = "text-align: center;" });
												   Conc.Bound(w => w.NP1_ISA_AS).Title("Alarma Social").HtmlAttributes(new { style = "text-align: center;" });
										})

									);

							  })
							.DataSource(dataSource => dataSource.Ajax()
							.ServerOperation(true)
							.Read(read => read.Action("BuscadorBienAmenazasInstalacion1","Evaluaciones",new { BienId = "#=Id_Bien#", InstalacionId = "#=Id#" })))
							.Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
							.Sortable()
							.Scrollable(scrollable => scrollable.Height("auto"))		                    
							.ToClientTemplate())
						</script>*@
						
			</div>
		</div>
	</div>

<div class="row" style=" height:30px;"> &nbsp;
</div>




	<div class="row">
	<div class="col-md-8">
		<p></p>
	</div>
			<div id="Opcion02" class="space10" style="margin-left: 40%; display: block">
			<div class="btn-group btn-group-sm">
				 <a class="btn btn-default " href="javascript:void(0)" onclick=" VolverEvaluacion(@ViewBag.Retorno) ">Volver</a>   
				@*<a class="btn btn-default " href="@(this.Url.Action("ListadoInstalaciones","Evaluaciones"))">
				Volver </a>*@
			</div>
		</div>
													 
</div>

@*<div id="myModalAmenazas" class="modal fade in" data-width="1210px" tabindex="-1" aria-hidden="false" style="width: 100%; margin-left: -299px; margin-top: -168px; display: none; height: 65%;margin-right:2px;overflow-y:initial !important">
	<div class="modal-body">
		<div class="apply_info">
			<div id="AsignarAmenazas"></div>
		</div>
	</div>
</div>*@

<script>
	function Ayuda() {
		if (window.ventana) {
			ventana.close();
			OpenWin();
		} else {
			OpenWin();
		}
	}

	function closeWin() {
		if (window.ventana) {
			ventana.close();
		}
	}
	
	function onShow(e) {
	}

	function onHide(e) {
	}

	$(document).ready(function() {
		$("#toggle1").kendoTooltip({
			content: "Visualizar Bien/Amenaza",
			show: onShow,
			hide: onHide,
			position: "top"
		});
	
	});


</script>
<style>
#GridInstalaciones11111 th.k-header { text-align: center, }

</style>
